<Page
    x:Class="JacobC.Xiami.Views.PlaylistPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="using:JacobC.Xiami.Views"
    xmlns:m="using:JacobC.Xiami.Models"
    xmlns:vm="using:JacobC.Xiami.ViewModels"
    xmlns:controls="using:Template10.Controls"
    xmlns:service="using:JacobC.Xiami.Services"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:t10c="using:Template10.Converters"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d">

    <Page.DataContext>
        <vm:PlaylistPageViewModel x:Name="ViewModel" />
    </Page.DataContext>
    <Page.Resources>
        <SolidColorBrush x:Name="HoverItemFore" Color="Black"/>
        <Style x:Key="TitleText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontStyle" Value="Italic"/>
        </Style>
        <Style x:Key="sFontIcon" TargetType="FontIcon">
            <Setter Property="Foreground" Value="{StaticResource DisableColorBrush}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>
        <t10c:ValueWhenConverter x:Key="ReverseVisibilityConverter">
            <t10c:ValueWhenConverter.When>
                <x:Boolean>False</x:Boolean>
            </t10c:ValueWhenConverter.When>
            <t10c:ValueWhenConverter.Value>
                <Visibility>Visible</Visibility>
            </t10c:ValueWhenConverter.Value>
            <t10c:ValueWhenConverter.Otherwise>
                <Visibility>Collapsed</Visibility>
            </t10c:ValueWhenConverter.Otherwise>
        </t10c:ValueWhenConverter>
        <t10c:ValueWhenConverter x:Key="VisibilityConverter">
            <t10c:ValueWhenConverter.When>
                <x:Boolean>True</x:Boolean>
            </t10c:ValueWhenConverter.When>
            <t10c:ValueWhenConverter.Value>
                <Visibility>Visible</Visibility>
            </t10c:ValueWhenConverter.Value>
            <t10c:ValueWhenConverter.Otherwise>
                <Visibility>Collapsed</Visibility>
            </t10c:ValueWhenConverter.Otherwise>
        </t10c:ValueWhenConverter>
        <t10c:ValueWhenConverter x:Key="CheckedConverter">
            <t10c:ValueWhenConverter.When>
                <x:Boolean>True</x:Boolean>
            </t10c:ValueWhenConverter.When>
            <t10c:ValueWhenConverter.Value>
                <x:String>&#xE73A;</x:String>
            </t10c:ValueWhenConverter.Value>
            <t10c:ValueWhenConverter.Otherwise>
                <x:String>&#xE739;</x:String>
            </t10c:ValueWhenConverter.Otherwise>
        </t10c:ValueWhenConverter>
        <t10c:ValueWhenConverter x:Key="LovedIconConverter">
            <t10c:ValueWhenConverter.When>
                <x:Boolean>True</x:Boolean>
            </t10c:ValueWhenConverter.When>
            <t10c:ValueWhenConverter.Value>
                <x:String>&#xE00B;</x:String>
            </t10c:ValueWhenConverter.Value>
            <t10c:ValueWhenConverter.Otherwise>
                <x:String>&#xE006;</x:String>
            </t10c:ValueWhenConverter.Otherwise>
        </t10c:ValueWhenConverter>
        <t10c:ValueWhenConverter x:Key="ItemThemeColorConverter">
            <t10c:ValueWhenConverter.When>
                <x:Boolean>True</x:Boolean>
            </t10c:ValueWhenConverter.When>
            <t10c:ValueWhenConverter.Value>
                <StaticResource ResourceKey="HoverItemFore"/>
            </t10c:ValueWhenConverter.Value>
            <t10c:ValueWhenConverter.Otherwise>
                <StaticResource ResourceKey="DisableColorBrush"/>
            </t10c:ValueWhenConverter.Otherwise>
        </t10c:ValueWhenConverter>
        <t10c:ValueWhenConverter x:Key="LovedColorConverter">
            <t10c:ValueWhenConverter.When>
                <x:Boolean>True</x:Boolean>
            </t10c:ValueWhenConverter.When>
            <t10c:ValueWhenConverter.Value>
                <SolidColorBrush Color="Red"/>
            </t10c:ValueWhenConverter.Value>
            <t10c:ValueWhenConverter.Otherwise>
                <StaticResource ResourceKey="DisableColorBrush"/>
            </t10c:ValueWhenConverter.Otherwise>
        </t10c:ValueWhenConverter>
        <t10c:ChangeTypeConverter x:Key="ToNullableConverter"/>
    </Page.Resources>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <!--添加全选，反选按钮-->
        <controls:PageHeader x:Name="pageHeader" RelativePanel.AlignLeftWithPanel="True"
                             Grid.Row="0" Text="Playlist">
            <controls:PageHeader.PrimaryCommands>
                <AppBarButton Command="{x:Bind DeleteCommand, Mode=OneWay}" Icon="Delete" Label="Delete Selection"/>
            </controls:PageHeader.PrimaryCommands>
        </controls:PageHeader>
        <!--TODO: 把这个列表放到一个控件里面，其中列表项末尾是+还是x可以设置一个属性，首行是否显示CheckBox也可以添加一个属性-->
        <ListView Grid.Row="1"
                      Margin="4"
                      x:Name="listView"
                      IsItemClickEnabled="True"
                      ItemsSource="{x:Bind ViewModel.Playlist}"
                      SelectionMode="Multiple"
                      SelectionChanged="listView_SelectionChanged"
                      IsMultiSelectCheckBoxEnabled="True"
                      ScrollViewer.HorizontalScrollMode="Disabled"
                      Padding="0"
                      CanDrag="True"
                      >
            <ListView.Header>
                <Grid Margin="12,4">
                    <!--TODO: 增加是否显示多选框按钮-->
                    <!--TODO: 响应按下标题进行排序-->
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48"/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="72"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="1" Text="Title" Style="{StaticResource TitleText}"/>
                    <TextBlock Grid.Column="2" Text="Performer" Style="{StaticResource TitleText}"/>
                    <TextBlock Grid.Column="3" Text="Album" Style="{StaticResource TitleText}"/>
                </Grid>
            </ListView.Header>
            <!--相当于ListViewItem的Style-->
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Grid Background="{TemplateBinding Background}">
                                    <VisualStateManager.VisualStateGroups>
                                        <!--悬停、按下-->
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal">
                                                <VisualState.Setters>
                                                    <Setter Target="ContentPresenter.Tag">
                                                        <Setter.Value>
                                                            <service:VisualStateSender>Normal</service:VisualStateSender>
                                                        </Setter.Value>
                                                    </Setter>
                                                </VisualState.Setters>
                                                <Storyboard>
                                                    <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="PointerOver">
                                                <VisualState.Setters>
                                                    <Setter Target="ContentPresenter.Tag">
                                                        <Setter.Value>
                                                            <service:VisualStateSender>Normal</service:VisualStateSender>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                                    <Setter Target="BorderBackground.Fill" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                                                    <Setter Target="BorderBackground.Opacity" Value="1"/>
                                                </VisualState.Setters>
                                                <Storyboard>
                                                    <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <VisualState.Setters>
                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                                    <Setter Target="BorderBackground.Fill" Value="{ThemeResource SystemControlHighlightListMediumBrush}"/>
                                                    <Setter Target="BorderBackground.Opacity" Value="1"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="Selected">
                                                <VisualState.Setters>
                                                    <Setter Target="ContentPresenter.Tag">
                                                        <Setter.Value>
                                                            <service:VisualStateSender>Selected</service:VisualStateSender>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Target="MultiSelectCheck.Opacity" Value="1"/>
                                                    <Setter Target="BorderBackground.Opacity" Value="1"/>
                                                    <Setter Target="BorderBackground.Fill" Value="{ThemeResource SystemControlHighlightListAccentLowBrush}"/>
                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                                </VisualState.Setters>
                                                <Storyboard>
                                                    <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="PointerOverSelected">
                                                <VisualState.Setters>
                                                    <Setter Target="ContentPresenter.Tag">
                                                        <Setter.Value>
                                                            <service:VisualStateSender>HoverSelected</service:VisualStateSender>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Target="MultiSelectCheck.Opacity" Value="1"/>
                                                    <Setter Target="BorderBackground.Opacity" Value="1"/>
                                                    <Setter Target="BorderBackground.Fill" Value="{ThemeResource SystemControlHighlightListAccentMediumBrush}"/>
                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                                </VisualState.Setters>
                                                <Storyboard>
                                                    <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <!--启用、停用多选-->
                                        <VisualStateGroup x:Name="MultiSelectStates">
                                            <VisualState x:Name="MultiSelectDisabled">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform"
                                                                        Storyboard.TargetProperty="X">
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                                        <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="-32" KeySpline="0.1,0.9,0.2,1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform"
                                                                       Storyboard.TargetProperty="X">
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                                        <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="32" KeySpline="0.1,0.9,0.2,1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform"
                                                                       Storyboard.TargetProperty="X">
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32"/>
                                                        <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.333" Value="Collapsed" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="MultiSelectEnabled">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform"
                                                                        Storyboard.TargetProperty="X">
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32"/>
                                                        <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform"
                                                                       Storyboard.TargetProperty="X">
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32"/>
                                                        <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform"
                                                                       Storyboard.TargetProperty="X">
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32"/>
                                                        <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterGrid" Storyboard.TargetProperty="Margin">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="32,0,0,0" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <!--???-->
                                        <VisualStateGroup x:Name="ReorderHintStates">
                                            <VisualState x:Name="NoReorderHint"/>
                                            <VisualState x:Name="BottomReorderHint">
                                                <Storyboard>
                                                    <DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Bottom" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="TopReorderHint">
                                                <Storyboard>
                                                    <DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Top" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="RightReorderHint">
                                                <Storyboard>
                                                    <DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Right" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="LeftReorderHint">
                                                <Storyboard>
                                                    <DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Left" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualStateGroup.Transitions>
                                                <VisualTransition To="NoReorderHint" GeneratedDuration="0:0:0.2"/>
                                            </VisualStateGroup.Transitions>
                                        </VisualStateGroup>
                                        <!--拖拽-->
                                        <VisualStateGroup x:Name="DragStates">
                                            <VisualState x:Name="NotDragging" />
                                            <VisualState x:Name="Dragging">
                                                <VisualState.Setters>
                                                    <Setter Target="ContentBorder.Opacity" Value="{ThemeResource ListViewItemDragThemeOpacity}"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="DraggingTarget">
                                                <Storyboard>
                                                    <DropTargetItemThemeAnimation TargetName="ContentBorder" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="MultipleDraggingPrimary">
                                                <Storyboard>
                                                    <!-- These two Opacity animations are required - the FadeInThemeAnimations
                                             on the same elements animate an internal Opacity. -->
                                                    <DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0"
                                                         To="1" />
                                                    <DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayText"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0"
                                                         To="1" />
                                                    <DoubleAnimation Storyboard.TargetName="ContentBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0"
                                                         To="{ThemeResource ListViewItemDragThemeOpacity}" />
                                                    <FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground" />
                                                    <FadeInThemeAnimation TargetName="MultiArrangeOverlayText" />
                                                    <DragItemThemeAnimation TargetName="ContentBorder" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="MultipleDraggingSecondary">
                                                <Storyboard>
                                                    <FadeOutThemeAnimation TargetName="ContentBorder" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="DraggedPlaceholder">
                                                <Storyboard>
                                                    <FadeOutThemeAnimation TargetName="ContentBorder" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualStateGroup.Transitions>
                                                <VisualTransition To="NotDragging" GeneratedDuration="0:0:0.2"/>
                                            </VisualStateGroup.Transitions>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <!--样式背景-->
                                    <Rectangle x:Name="BorderBackground"
                                                   IsHitTestVisible="False"
                                                   Opacity="0"
                                                   Control.IsTemplateFocusTarget="True"/>
                                    <Grid x:Name="ContentPresenterGrid"
                                              Background="Transparent"
                                              Margin="0,0,0,0">
                                        <Grid.RenderTransform>
                                            <TranslateTransform x:Name="ContentPresenterTranslateTransform"/>
                                        </Grid.RenderTransform>
                                        <!--ContentPresenter中包含的是DataTemplate-->
                                        <ContentPresenter Grid.Column="1" x:Name="ContentPresenter"
                                                              Margin="{TemplateBinding Padding}"
                                                              VerticalAlignment="Center"/>
                                    </Grid>
                                    <!--多选框的实现-->
                                    <Border x:Name="MultiSelectSquare"
                                                BorderBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                                BorderThickness="1"
                                                Width="16"
                                                Height="16"
                                                Margin="12,0,0,0"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Left"
                                                Visibility="Collapsed" >
                                        <Border.Clip>
                                            <RectangleGeometry Rect="0,0,20,20">
                                                <RectangleGeometry.Transform>
                                                    <TranslateTransform x:Name="MultiSelectClipTransform"/>
                                                </RectangleGeometry.Transform>
                                            </RectangleGeometry>
                                        </Border.Clip>
                                        <Border.RenderTransform>
                                            <TranslateTransform x:Name="MultiSelectCheckBoxTransform"/>
                                        </Border.RenderTransform>
                                        <FontIcon x:Name="MultiSelectCheck"
                                                      FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                                      Glyph="&#xE73E;"
                                                      FontSize="12"
                                                      Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                                      Visibility="Collapsed"
                                                      Opacity="0"/>
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <!--包含在ListViewItem的ContentPresenter中的内容-->
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="vm:SongViewModel">
                    <!--TODO: 点击Textblck可以链接到对应的专辑/歌曲界面（可以先链接到网页链接）-->
                    <!--TODO: 响应拖拽行为，有一个CanDrag属性-->
                    <Grid Tag="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}" Loaded="Grid_Loaded">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="28"/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="72"/>
                        </Grid.ColumnDefinitions>
                        <Grid Margin="0" Padding="0" HorizontalAlignment="Left">
                            <TextBlock Margin="4,0" 
                                           VerticalAlignment="Center"
                                           Foreground="{StaticResource DisableColorBrush}"
                                           Visibility="{x:Bind IsHovered, Converter={StaticResource ReverseVisibilityConverter}, Mode=OneWay}"
                                           Text="{x:Bind ListIndex}" HorizontalAlignment="Center"/>
                            <Button Style="{StaticResource EmptyButtonForIcon}" HorizontalAlignment="Left"
                                        Visibility="{x:Bind IsHovered, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"
                                        Command="{x:Bind PlayTrackCommand}">
                                <FontIcon Glyph="&#xE7F6;" FontSize="24"/>
                            </Button>
                        </Grid>
                        <TextBlock Grid.Column="1" Text="{x:Bind Model.Name}"/>
                        <TextBlock Grid.Column="2" Text="{x:Bind Model.TrackArtist}"/>
                        <TextBlock Grid.Column="3" Text="{x:Bind Model.Album.Name}"/>
                        <CheckBox Grid.Column="4" Margin="4,0,0,0" IsChecked="{x:Bind Model.IsLoved, Converter={StaticResource ToNullableConverter}, Mode=TwoWay}">
                            <Control.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CombinedStates">
                                                <VisualState x:Name="UncheckedNormal" />
                                                <VisualState x:Name="UncheckedPointerOver">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="Foreground">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <SolidColorBrush Color="Black"/>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="UncheckedPressed" />
                                                <VisualState x:Name="UncheckedDisabled"/>
                                                <VisualState x:Name="CheckedNormal">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="Foreground">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <SolidColorBrush Color="Red"/>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="Glyph">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="&#xE00B;" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="CheckedPointerOver">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="Foreground">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <SolidColorBrush Color="Red"/>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph" Storyboard.TargetProperty="Glyph">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="&#xE007;" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="CheckedPressed"/>
                                                <VisualState x:Name="CheckedDisabled"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <FontIcon x:Name="CheckGlyph" Style="{StaticResource sFontIcon}"
                                          Foreground="{StaticResource DisableColorBrush}"
                                          Glyph="&#xE006;" 
                                          />
                                    </Grid>
                                </ControlTemplate>
                            </Control.Template>
                        </CheckBox>
                        <FontIcon Style="{StaticResource sFontIcon}" 
                                      Foreground="{x:Bind IsHovered, Converter={StaticResource ItemThemeColorConverter}, Mode=OneWay}"
                                      Visibility="{x:Bind IsHovered, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"
                                      Grid.Column="4" Glyph="&#xE169;" 
                                      Margin="28,0,0,0"/>
                        <Button Grid.Column="4" Margin="52,0,0,0" Style="{StaticResource EmptyButtonForIcon}">
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction Command="{x:Bind DeleteCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"/>
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                            <FontIcon Style="{StaticResource sFontIcon}"
                                          Foreground="{x:Bind IsHovered , Converter={StaticResource ItemThemeColorConverter}, Mode=OneWay}"
                                          Visibility="{x:Bind IsHovered, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"
                                          Glyph="&#xE711;"
                                          />
                        </Button>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </Grid>
</Page>
