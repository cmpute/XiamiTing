<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutTab.Header" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="AlbumArtist.Text" xml:space="preserve">
    <value>艺人：		</value>
    <comment>AlbumPage艺人标签</comment>
  </data>
  <data name="AlbumLanguage.Text" xml:space="preserve">
    <value>语种：		</value>
    <comment>AlbumPage语种标签</comment>
  </data>
  <data name="AlbumPublisher.Text" xml:space="preserve">
    <value>唱片公司：	</value>
    <comment>AlbumPage唱片公司标签</comment>
  </data>
  <data name="AlbumReleaseDate.Text" xml:space="preserve">
    <value>发售日期：	</value>
    <comment>AlbumPage发售日期标签</comment>
  </data>
  <data name="AlbumType.Text" xml:space="preserve">
    <value>专辑类型：	</value>
    <comment>AlbumPage专辑类型标签</comment>
  </data>
  <data name="AuthorAboutInfoText.Text" xml:space="preserve">
    <value>作者：</value>
    <comment>About页 作者 文字</comment>
  </data>
  <data name="CollectionRecommend.Header" xml:space="preserve">
    <value>精选集</value>
    <comment>首页选项卡</comment>
  </data>
  <data name="CommAboutInfoText.Text" xml:space="preserve">
    <value>用户交流：</value>
    <comment>About页 用户交流 文字</comment>
  </data>
  <data name="ContactAboutInfoText.Text" xml:space="preserve">
    <value>联系作者：</value>
  </data>
  <data name="DailyRecommend.Header" xml:space="preserve">
    <value>每日推荐</value>
    <comment>首页选项卡</comment>
  </data>
  <data name="DevAboutInfoText.Text" xml:space="preserve">
    <value>开发者</value>
  </data>
  <data name="DiscoveryHeader.Text" xml:space="preserve">
    <value>发现 · 倾听</value>
    <comment>DiscoveryPage的标题栏文字</comment>
  </data>
  <data name="DiscoveryNavText.Text" xml:space="preserve">
    <value>发现</value>
    <comment>DiscoveryPage导航按钮文字</comment>
  </data>
  <data name="FeedbackNavText.Text" xml:space="preserve">
    <value>反馈</value>
    <comment>反馈导航按钮文字</comment>
  </data>
  <data name="LibraryNavText.Text" xml:space="preserve">
    <value>乐馆</value>
    <comment>LibraryPage导航栏按钮文字</comment>
  </data>
  <data name="LibsAboutInfoText.Text" xml:space="preserve">
    <value>感谢这些开源库的开发者：</value>
  </data>
  <data name="LicenseTitle.Text" xml:space="preserve">
    <value>许可协议</value>
    <comment>设置页许可标题</comment>
  </data>
  <data name="PlaylistNavText.Text" xml:space="preserve">
    <value>播放列表</value>
    <comment>PlaylistPage导航按钮文字</comment>
  </data>
  <data name="SettingsNavText.Text" xml:space="preserve">
    <value>设置</value>
    <comment>SettingsPage导航栏按钮文字</comment>
  </data>
  <data name="SettingTab.Header" xml:space="preserve">
    <value>普通设置</value>
  </data>
  <data name="SourceAboutInfoText.Text" xml:space="preserve">
    <value>GitHub源码：</value>
    <comment>About页 Git 文字</comment>
  </data>
  <data name="SupportAboutInfoText.Text" xml:space="preserve">
    <value>支持作者：欢迎投食o(*≧▽≦)ツ，支付宝cmpute@qq.com</value>
  </data>
  <data name="VersionAboutInfoText.Text" xml:space="preserve">
    <value>当前版本：</value>
    <comment>About页 版本号 文字</comment>
  </data>
  <data name="RadioRecommend.Header" xml:space="preserve">
    <value>电台</value>
    <comment>首页选项卡</comment>
  </data>
  <data name="AlbumPageHeader.Text" xml:space="preserve">
    <value>专辑</value>
    <comment>Album页标题</comment>
  </data>
  <data name="ArtistPageHeader.Text" xml:space="preserve">
    <value>艺术家</value>
    <comment>Artist页标题</comment>
  </data>
  <data name="ArtistArea.Text" xml:space="preserve">
    <value>地区：	</value>
    <comment>ArtistPage艺人地区</comment>
  </data>
  <data name="ArtistGenre.Text" xml:space="preserve">
    <value>风格：	</value>
    <comment>ArtistPage艺人风格</comment>
  </data>
  <data name="GenrePageHeader.Text" xml:space="preserve">
    <value>风格</value>
    <comment>GenrePage的标题栏文字</comment>
  </data>
  <data name="LicenseTab.Header" xml:space="preserve">
    <value>许可</value>
  </data>
  <data name="UserAlbumCollectTab.Header" xml:space="preserve">
    <value>收藏的专辑</value>
    <comment>UserInfo页</comment>
  </data>
  <data name="UserInfoTab.Header" xml:space="preserve">
    <value>基本信息</value>
    <comment>UserInfo页</comment>
  </data>
  <data name="SearchNavText.Text" xml:space="preserve">
    <value>搜索</value>
    <comment>SearchPage导航栏按钮文字</comment>
  </data>
</root>